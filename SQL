DROP TABLE CLIENTE CASCADE constraints;

create table CLIENTE (

CODIGO      NUMBER          not null,
NOME        varchar2(60)    not null,
RUA         varchar2(80)    not null,
NR          NUMBER(4)       not null,
BAIRRO      varchar2(50)    not null,
COMPLEMENTO varchar2(100),
CIDADE      varchar2(50)    not null,
UF          varchar2(2)     not null,
CEP         varchar2(10)    not null,
constraint PK_CLIENTE primary key (CODIGO)
);

DROP TABLE VENDEDOR CASCADE constraints;

create table VENDEDOR (

MATRICULA   NUMBER          not null,
NOME        varchar2(60)    not null,
CNPF        varchar2(14)    not null,
constraint PK_VENDEDOR primary key (MATRICULA)
);

DROP TABLE FONE_CLIENTE CASCADE CONSTRAINTS;

create table FONE_CLIENTE (

NUMERO      varchar2(14)    not null,
CODIGO_CLI NUMBER not null,
constraint PK_FONE_CLIENTE primary key (NUMERO, CODIGO_CLI),
constraint FK_FONE_CLIENTE foreign key (CODIGO_CLI) references CLIENTE (CODIGO)
);

DROP TABLE FONE_VENDEDOR CASCADE CONSTRAINTS;

create table FONE_VENDEDOR (

NUMERO      varchar2(14)    not null,
MATRICULA_VEN NUMBER not null,
constraint PK_FONE_VENDEDOR primary key (NUMERO, MATRICULA_VEN),
constraint FK_FONE_VENDEDOR foreign key (MATRICULA_VEN) references VENDEDOR(MATRICULA)
);

DROP TABLE PF;

create table PF (

CODIGO_CLI      NUMBER      not null,
CNPF            varchar2(14)not null,
RG              varchar2(10)not null,
DATA_NASCIMENTO DATE        not null,
constraint PK_PF primary key (CODIGO_CLI),
constraint FK_PF_CLIENTE foreign key (CODIGO_CLI) references CLIENTE (CODIGO)
);

DROP TABLE Pj;

create table PJ (

CODIGO_CLI      NUMBER      not null,
CNPJ            varchar2(19)not null,
IE              varchar2(10)not null,
NOME_FANTASIA   varchar2(60)not null,
constraint PK_PJ primary key (CODIGO_CLI),
constraint FK_PJ_CLIENTE foreign key (CODIGO_CLI) references CLIENTE (CODIGO)
);

DROP TABLE PRATELEIRA CASCADE CONSTRAINTS;

create table PRATELEIRA (

CODIGO      NUMBER(3)       not null,
DESCRICAO   varchar2(50)    not null,
NUMERO_SECOES NUMBER(2)     not null,
constraint PK_PRATELEIRA primary key (CODIGO)
);

DROP TABLE PRODUTO CASCADE CONSTRAINTS;

create table PRODUTO (

CODIGO      NUMBER          not null,
DESCRICAO   varchar2(80)    not null,
UNID_MEDIDA varchar2(10)    not null,
constraint PK_PRODUTO primary key (CODIGO)
);

DROP TABLE PEDIDO CASCADE CONSTRAINTS;

create table PEDIDO (

NUMERO      NUMBER(6) not null,
DATA        DATE      not null,
PRAZO_ENTREGA DATE,
RUA         varchar2(80),
NR          NUMBER(4),
BAIRRO      varchar2(50),
COMPLEMENTO varchar2(100),
CIDADE      varchar2(50),
UF          varchar2(2),
CEP         varchar2(10),
TOTAL_FATURA NUMBER(8,2),
CODIGO_CLI  NUMBER not null,
MATRICULA_VEN NUMBER not null
);

DROP TABLE ITEM_PRODUTO;

create table ITEM_PRODUTO (

CODIGO_PRO NUMBER       not null,
NUMERO_PED NUMBER(6)    not null,
QUANTIDADE NUMBER(5)    not null,
PRECO_UNITARIO NUMBER(5,2) not null,
VALOR_ITEM NUMBER(7,2)

);


DROP TABLE CAPACIDADE_ESTOQUE;

create table CAPACIDADE_ESTOQUE (

CODIGO_PRO NUMBER       not null,
CODIGO_PRA NUMBER(3)    not null,
QUANTIDADE NUMBER(5)    not null
);

DROP TABLE ESTOQUE;

create table ESTOQUE (

DATA_ENTRADA    DATE        not null,
CODIGO_PRO      NUMBER      not null,
CODIGO_PRA      NUMBER(3)   not null,
QUANTIDADE      NUMBER(5)   not null,
DATA_VALIDADE   DATE
);

alter table PEDIDO
ADD constraint PK_PEDIDO primary key (NUMERO);
alter table ITEM_PRODUTO

ADD constraint PK_ITEM_PRODUTO primary key (CODIGO_PRO, NUMERO_PED);
alter table CAPACIDADE_ESTOQUE

ADD constraint PK_CAPACIDADE_ESTOQUE primary key (CODIGO_PRO, CODIGO_PRA);
alter table ESTOQUE

ADD constraint PK_ESTOQUE primary key (CODIGO_PRO, CODIGO_PRA,DATA_ENTRADA);

alter table PEDIDO
add constraint FK_PED_VENDEDOR foreign key (MATRICULA_VEN)
references VENDEDOR (MATRICULA);

alter table PEDIDO
add constraint FK_PED_CLIENTE foreign key (CODIGO_CLI)
references CLIENTE (CODIGO);

alter table ITEM_PRODUTO
add constraint FK_ITEM_PEDIDO foreign key (NUMERO_PED)
references PEDIDO (NUMERO);

alter table ITEM_PRODUTO
add constraint FK_ITEM_PRODUTO foreign key (CODIGO_PRO)
references PRODUTO (CODIGO);

alter table CAPACIDADE_ESTOQUE
add constraint FK_CAP_EST_PRATELEIRA foreign key (CODIGO_PRA)
references PRATELEIRA (CODIGO);

alter table CAPACIDADE_ESTOQUE
add constraint FK_CAP_EST_PRODUTO foreign key (CODIGO_PRO)
references PRODUTO (CODIGO);

alter table ESTOQUE
add constraint FK_EST_PRATELEIRA foreign key (CODIGO_PRA)
references PRATELEIRA (CODIGO);

alter table ESTOQUE
add constraint FK_EST_PRODUTO foreign key (CODIGO_PRO)
references PRODUTO (CODIGO);

alter table PEDIDO
add constraint CK_NUMERO_PEDIDO check (NUMERO BETWEEN 1 AND 99999);

CREATE UNIQUE INDEX IND_CNPF_PF
ON PF (CNPF DESC);
CREATE UNIQUE INDEX IND_CNPF_PJ
ON PJ (CNPJ DESC);

drop sequence SEQ_ITEM_ID;
create sequence SEQ_ITEM_ID start with 2 increment by 2;

-- comentarios parte 5
COMMENT on column item_produto.codigo_pro is 'codigo do produto';
COMMENT on column item_produto.numero_ped is 'numero do pedido';
COMMENT on column item_produto.quantidade is 'quantidade pedidos';
COMMENT on column item_produto.preco_unitario is 'preco por unidade do produto';
COMMENT on column item_produto.valor_item is 'valor completo';

INSERT INTO VENDEDOR
SELECT * FROM DEMO.VENDEDOR;

INSERT INTO CLIENTE
SELECT * FROM DEMO.CLIENTE;


INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 207, p.NUMERO, 100, 10.00, 100 * 10.00
FROM PEDIDO p
WHERE MOD(p.NUMERO, 2) = 0 AND EXTRACT(YEAR FROM p.DATA) < 2018;


INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 206, p.NUMERO, 50, 12.00, 50 * 12.00
FROM PEDIDO p
WHERE MOD(p.NUMERO, 2) <> 0 AND EXTRACT(YEAR FROM p.DATA) = 2018;


INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 207, p.NUMERO, 150, 14.00, 150 * 14.00
FROM PEDIDO p
WHERE MOD(p.NUMERO, 2) = 0 AND EXTRACT(YEAR FROM p.DATA) = 2018;


INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 206, p.NUMERO, 200, 8.00, 200 * 8.00
FROM PEDIDO p
WHERE MOD(p.NUMERO, 2) <> 0 AND EXTRACT(YEAR FROM p.DATA) < 2018;


INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 208, p.NUMERO, 80, 18.00, 80 * 18.00
FROM PEDIDO p
WHERE p.RUA IS NULL AND EXTRACT(YEAR FROM p.DATA) = 2017;


INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 208, p.NUMERO, 70, 20.00, 70 * 20.00
FROM PEDIDO p
WHERE p.RUA IS NULL AND EXTRACT(YEAR FROM p.DATA) = 2018;


INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 202, p.NUMERO, 60, 15.00, 60 * 15.00
FROM PEDIDO p
WHERE p.RUA IS NOT NULL AND MOD(EXTRACT(DAY FROM p.DATA), 2) <> 0;


INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 205, p.NUMERO, 90, 11.50, 90 * 11.50
FROM PEDIDO p
WHERE p.RUA IS NOT NULL AND MOD(EXTRACT(DAY FROM p.DATA), 2) = 0;


INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 203, p.NUMERO, 550, 21.35, 550 * 21.35
FROM PEDIDO p
WHERE p.RUA IS NOT NULL AND MOD(EXTRACT(DAY FROM p.DATA), 2) <> 0;


INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
SELECT 204, p.NUMERO, 150, 25.85, 150 * 25.85
FROM PEDIDO p
WHERE p.RUA IS NULL AND MOD(EXTRACT(DAY FROM p.DATA), 2) = 0;

UPDATE ITEM_PRODUTO
SET QUANTIDADE = QUANTIDADE * 2
WHERE (NUMERO_PED < 20 OR NUMERO_PED > 50)
  AND CODIGO_PRO BETWEEN 203 AND 205;

UPDATE ITEM_PRODUTO ip
SET ip.QUANTIDADE = ip.QUANTIDADE + 15
WHERE EXISTS (
    SELECT 1
    FROM PEDIDO p
    JOIN CLIENTE c ON p.CODIGO_CLI = c.CODIGO
    JOIN VENDEDOR v ON p.MATRICULA_VEN = v.MATRICULA
    WHERE p.NUMERO = ip.NUMERO_PED
      AND MOD(c.CODIGO, 2) <> 0
      AND MOD(v.MATRICULA, 2) = 0
);

UPDATE ITEM_PRODUTO
SET PRECO_UNITARIO = PRECO_UNITARIO - 0.50
WHERE MOD(NUMERO_PED, 3) = 0;

UPDATE PEDIDO p
SET TOTAL_FATURA = (
    SELECT SUM(ip.VALOR_ITEM)
    FROM ITEM_PRODUTO ip
    WHERE ip.NUMERO_PED = p.NUMERO
);




-- a. Excluir os registros de PEDIDO
BEGIN
    DELETE FROM PEDIDO
    WHERE MOD(NUMERO, 2) <> 0
      AND MATRICULA_VEN = 102
      AND RUA IS NOT NULL;

    
    COMMIT;
END;
/


SELECT * FROM PEDIDO
WHERE MOD(NUMERO, 2) <> 0
  AND MATRICULA_VEN = 102
  AND RUA IS NOT NULL;

-- b. Excluir os itens de produtos do menor número de pedido na última data de inclusão de pedido
BEGIN
    DELETE FROM ITEM_PRODUTO
    WHERE NUMERO_PED = (
        SELECT MIN(NUMERO)
        FROM PEDIDO
        WHERE DATA = (SELECT MAX(DATA) FROM PEDIDO)
    );

    
    COMMIT;
END;
/


SELECT * FROM ITEM_PRODUTO
WHERE NUMERO_PED = (
    SELECT MIN(NUMERO)
    FROM PEDIDO
    WHERE DATA = (SELECT MAX(DATA) FROM PEDIDO)
);

-- c. Restaurar os dados excluídos


BEGIN
    
    INSERT INTO PEDIDO (NUMERO, DATA, PRAZO_ENTREGA, RUA, NR, BAIRRO, COMPLEMENTO, CIDADE, UF, CEP, TOTAL_FATURA, CODIGO_CLI, MATRICULA_VEN)
    SELECT NUMERO, DATA, PRAZO_ENTREGA, RUA, NR, BAIRRO, COMPLEMENTO, CIDADE, UF, CEP, TOTAL_FATURA, CODIGO_CLI, MATRICULA_VEN
    FROM PEDIDO_BACKUP
    WHERE MOD(NUMERO, 2) <> 0
      AND MATRICULA_VEN = 102
      AND RUA IS NOT NULL;

    
    INSERT INTO ITEM_PRODUTO (CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM)
    SELECT CODIGO_PRO, NUMERO_PED, QUANTIDADE, PRECO_UNITARIO, VALOR_ITEM
    FROM ITEM_PRODUTO_BACKUP
    WHERE NUMERO_PED = (
        SELECT MIN(NUMERO)
        FROM PEDIDO
        WHERE DATA = (SELECT MAX(DATA) FROM PEDIDO)
    );

    
    COMMIT;
END;
/


SELECT * FROM PEDIDO
WHERE MOD(NUMERO, 2) <> 0
  AND MATRICULA_VEN = 102
  AND RUA IS NOT NULL;

SELECT * FROM ITEM_PRODUTO
WHERE NUMERO_PED = (
    SELECT MIN(NUMERO)
    FROM PEDIDO
    WHERE DATA = (SELECT MAX(DATA) FROM PEDIDO)
);

SELECT table_name
FROM user_tables;

SELECT table_name, column_name, data_type, data_length, nullable
FROM user_tab_columns;

SELECT constraint_name, constraint_type, table_name
FROM user_constraints;

SELECT c.constraint_name, c.constraint_type, col.table_name, col.column_name
FROM user_constraints c
JOIN user_cons_columns col
ON c.constraint_name = col.constraint_name;

SELECT MATRICULA, NOME
FROM VENDEDOR
ORDER BY NOME DESC;

SELECT c.NOME AS CLIENTE, pj.CNPJ, c.CIDADE
FROM CLIENTE c
JOIN PJ pj ON c.CODIGO = pj.CODIGO_CLI
ORDER BY CLIENTE ASC, CIDADE DESC;

SELECT v.NOME AS VENDEDOR, p.NUMERO AS PEDIDO, TO_CHAR(p.DATA, 'dd/mm/yyyy') AS DATA
FROM VENDEDOR v
JOIN PEDIDO p ON v.MATRICULA = p.MATRICULA_VEN
WHERE p.TOTAL_FATURA BETWEEN 1000 AND 5000
ORDER BY VENDEDOR DESC, p.DATA ASC;

SELECT constraint_name AS CONSTRAINT, 
       constraint_type AS TIPO, 
       search_condition AS CONDICAO
FROM user_constraints
WHERE table_name = 'ITEM_PRODUTO'
ORDER BY constraint_name;

CREATE OR REPLACE VIEW VIEW_CLIENTE AS
SELECT c.CODIGO,
       c.NOME,
       c.RUA,
       c.NR,
       c.BAIRRO,
       c.COMPLEMENTO,
       c.CIDADE,
       c.UF,
       c.CEP,
       pf.CNPF AS CNPF_PF,
       pf.RG,
       pf.DATA_NASCIMENTO,
       pj.CNPJ AS CNPJ_PJ,
       pj.IE,
       pj.NOME_FANTASIA
FROM CLIENTE c
LEFT JOIN PF pf ON c.CODIGO = pf.CODIGO_CLI
LEFT JOIN PJ pj ON c.CODIGO = pj.CODIGO_CLI;

SELECT table_name AS TABELA
FROM user_tables
ORDER BY table_name ASC;

SELECT NUMERO AS PEDIDO, 
       DATA, 
       TOTAL_FATURA AS TOTAL
FROM PEDIDO
WHERE TOTAL_FATURA > 2000.00
ORDER BY DATA DESC;

SELECT c.NOME AS CLIENTE, 
       p.NUMERO AS PEDIDO, 
       p.DATA, 
       p.TOTAL_FATURA AS TOTAL
FROM PEDIDO p
JOIN CLIENTE c ON p.CODIGO_CLI = c.CODIGO
WHERE p.TOTAL_FATURA > 2000.00
ORDER BY c.NOME ASC;

INSERT INTO PRATELEIRA (CODIGO, DESCRICAO, NUMERO_SECOES)
VALUES (390, 'Prateleira de teste', 2);

SELECT p.CODIGO AS PRATELEIRA_CODIGO,
       p.DESCRICAO AS PRATELEIRA_DESCRICAO,
       COALESCE(pr.DESCRICAO, 'sem produto') AS PRODUTO,
       COUNT(DISTINCT pr.CODIGO) AS QUANTIDADE_PRODUTOS
FROM PRATELEIRA p
LEFT JOIN CAPACIDADE_ESTOQUE ce ON p.CODIGO = ce.CODIGO_PRA
LEFT JOIN PRODUTO pr ON ce.CODIGO_PRO = pr.CODIGO
GROUP BY p.CODIGO, p.DESCRICAO, pr.DESCRICAO
ORDER BY QUANTIDADE_PRODUTOS DESC;

SELECT CODIGO, NOME, CNPF_PF AS CNPF
FROM VIEW_CLIENTE
WHERE CNPF_PF IS NOT NULL
ORDER BY NOME DESC;

SELECT p.NUMERO AS PEDIDO,
       p.DATA,
       pr.DESCRICAO AS PRODUTO,
       ip.QUANTIDADE
FROM PEDIDO p
JOIN ITEM_PRODUTO ip ON p.NUMERO = ip.NUMERO_PED
JOIN PRODUTO pr ON ip.CODIGO_PRO = pr.CODIGO
ORDER BY p.DATA ASC, pr.DESCRICAO DESC;

CREATE OR REPLACE VIEW VIEW_ESTOQUE AS
SELECT 
    e.CODIGO_PRO,
    pr.DESCRICAO AS PRODUTO,
    e.CODIGO_PRA,
    p.DESCRICAO AS PRATELEIRA,
    e.DATA_ENTRADA,
    e.QUANTIDADE,
    e.DATA_VALIDADE
FROM 
    ESTOQUE e
JOIN 
    PRODUTO pr ON e.CODIGO_PRO = pr.CODIGO
JOIN 
    PRATELEIRA p ON e.CODIGO_PRA = p.CODIGO;



